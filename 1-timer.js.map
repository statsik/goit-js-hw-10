{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast/dist/js/iziToast.min.js\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nlet userSelectedDate;\nconst button = document.querySelector(\"button\");\nbutton.disabled = true; \nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      console.log(selectedDates[0]);\n      userSelectedDate = selectedDates[0];\n      if(userSelectedDate <= new Date()){\n        button.disabled = true;\n        console.log(\"Дата в прошлом, iziToast должен запуститься\");\n        iziToast.error({\n          message: \"Please choose a date in the future\",\n          position: \"topRight\",\n        });\n      } else if(userSelectedDate > new Date()) {\n        button.disabled = false;\n      }\n    },\n  };\n\nconst picker = flatpickr(\"#datetime-picker\", options);\n\nbutton.addEventListener(\"click\", (event) => {\n    const countdown = setInterval(() => {\n      const now = new Date();\n      const timeLeft = userSelectedDate - now;\n\n      if (timeLeft <= 0) {\n        clearInterval(countdown);\n        return;\n      }\n\n      const daysCalculate = String(Math.floor(timeLeft / (1000 * 60 * 60 * 24))).padStart(2, \"0\");\n      const hoursCalculate = String(Math.floor((timeLeft / (1000 * 60 * 60)) % 24)).padStart(2, \"0\");\n      const minutesCalculate = String(Math.floor((timeLeft / (1000 * 60)) % 60)).padStart(2, \"0\");\n      const secondsCalculate = String(Math.floor((timeLeft / 1000) % 60)).padStart(2, \"0\");\n\n      const dataSet = document.querySelector(\"[data-days]\");\n      const dataHours = document.querySelector(\"[data-hours]\");\n      const dataMinutes = document.querySelector(\"[data-minutes]\");\n      const dataSeconds = document.querySelector(\"[data-seconds]\");\n\n      dataSet.textContent = daysCalculate;\n      dataHours.textContent = hoursCalculate;\n      dataMinutes.textContent = minutesCalculate;\n      dataSeconds.textContent = secondsCalculate;\n      button.disabled = true;\n    }, 1000);\n})\n\n"],"names":["userSelectedDate","button","options","selectedDates","iziToast","flatpickr","event","countdown","timeLeft","daysCalculate","hoursCalculate","minutesCalculate","secondsCalculate","dataSet","dataHours","dataMinutes","dataSeconds"],"mappings":"+IAMA,IAAIA,EACJ,MAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,SAAW,GAClB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5BH,EAAmBG,EAAc,CAAC,EAC/BH,GAAoB,IAAI,MACzBC,EAAO,SAAW,GAClB,QAAQ,IAAI,6CAA6C,EACzDG,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UACpB,CAAS,GACOJ,EAAmB,IAAI,OAC/BC,EAAO,SAAW,GAErB,CACL,EAEeI,EAAU,mBAAoBH,CAAO,EAEpDD,EAAO,iBAAiB,QAAUK,GAAU,CACxC,MAAMC,EAAY,YAAY,IAAM,CAElC,MAAMC,EAAWR,EADL,IAAI,KAGhB,GAAIQ,GAAY,EAAG,CACjB,cAAcD,CAAS,EACvB,MACD,CAED,MAAME,EAAgB,OAAO,KAAK,MAAMD,GAAY,IAAO,GAAK,GAAK,GAAG,CAAC,EAAE,SAAS,EAAG,GAAG,EACpFE,EAAiB,OAAO,KAAK,MAAOF,GAAY,IAAO,GAAK,IAAO,EAAE,CAAC,EAAE,SAAS,EAAG,GAAG,EACvFG,EAAmB,OAAO,KAAK,MAAOH,GAAY,IAAO,IAAO,EAAE,CAAC,EAAE,SAAS,EAAG,GAAG,EACpFI,EAAmB,OAAO,KAAK,MAAOJ,EAAW,IAAQ,EAAE,CAAC,EAAE,SAAS,EAAG,GAAG,EAE7EK,EAAU,SAAS,cAAc,aAAa,EAC9CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DH,EAAQ,YAAcJ,EACtBK,EAAU,YAAcJ,EACxBK,EAAY,YAAcJ,EAC1BK,EAAY,YAAcJ,EAC1BX,EAAO,SAAW,EACnB,EAAE,GAAI,CACX,CAAC"}